# Generated by Django 5.2.5 on 2025-08-31 16:06

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название жанра')),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
            },
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('type', models.CharField(choices=[('movie', 'Фильм'), ('series', 'Сериал')], max_length=10, verbose_name='Тип')),
                ('poster', models.ImageField(blank=True, null=True, upload_to='posters/', verbose_name='Постер')),
                ('release_date', models.DateField(blank=True, null=True, verbose_name='Дата выхода')),
                ('duration', models.PositiveIntegerField(blank=True, help_text='Продолжительность в минутах', null=True, verbose_name='Длительность')),
                ('imdb_rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)], verbose_name='Рейтинг IMDB')),
                ('kinopoisk_rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)], verbose_name='Рейтинг Кинопоиск')),
                ('total_seasons', models.PositiveIntegerField(default=1, verbose_name='Всего сезонов')),
                ('total_episodes', models.PositiveIntegerField(default=1, verbose_name='Всего серий')),
                ('genres', models.ManyToManyField(related_name='shows', to='shows.genre', verbose_name='Жанры')),
            ],
            options={
                'verbose_name': 'Фильм/Сериал',
                'verbose_name_plural': 'Фильмы/Сериалы',
            },
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season_number', models.PositiveIntegerField(verbose_name='Номер сезона')),
                ('episode_number', models.PositiveIntegerField(verbose_name='Номер серии')),
                ('title', models.CharField(max_length=255, verbose_name='Название серии')),
                ('air_date', models.DateField(blank=True, null=True, verbose_name='Дата выхода серии')),
                ('description', models.TextField(blank=True, verbose_name='Описание серии')),
                ('show', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='shows.show', verbose_name='Сериал')),
            ],
            options={
                'verbose_name': 'Эпизод',
                'verbose_name_plural': 'Эпизоды',
                'ordering': ['season_number', 'episode_number'],
                'unique_together': {('show', 'season_number', 'episode_number')},
            },
        ),
        migrations.CreateModel(
            name='UserShowStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('watching', 'Смотрю'), ('stopped', 'Перестал смотреть'), ('planned', 'Буду смотреть'), ('watched', 'Просмотрено')], default='planned', max_length=15)),
                ('current_season', models.PositiveIntegerField(default=1)),
                ('current_episode', models.PositiveIntegerField(default=0)),
                ('show', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_statuses', to='shows.show')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='show_statuses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Статус просмотра',
                'verbose_name_plural': 'Статусы просмотра',
                'unique_together': {('user', 'show')},
            },
        ),
        migrations.CreateModel(
            name='WatchedEpisode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Оценка пользователя')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('watched_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата просмотра')),
                ('episode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watched_by', to='shows.episode')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watched_episodes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Просмотренная серия',
                'verbose_name_plural': 'Просмотренные серии',
                'unique_together': {('user', 'episode')},
            },
        ),
    ]
